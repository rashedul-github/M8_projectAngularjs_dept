<!DOCTYPE html>
<html ng-app="deptApp">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
    <script src="~/Scripts/umd/popper.js"></script>
    <script src="~/Scripts/jquery-3.5.1.js"></script>
    <style>
        body {
            padding-top: 70px;
            background-color: #fbecec;
            font-family: 'Roboto',Segoe UI, Tahoma, Geneva, Verdana, sans-serif;
        }
    </style>
</head>
<body ng-controller="outerCtrl">
    <div class="navbar navbar-dark bg-success navbar-expand-md fixed-top border-bottom">
        <div class="container">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <a href='@Url.Action("Index","Home")' class="navbar-brand">ABC Cor.</a>
            <div class="navbar-collapse collapse" id="navbarSupportedContent">
                <ul class="nav navbar-nav">
                    <li class="nav-item active"><a class="nav-link" ng-href="#!/home">Home</a></li>
                </ul>
                <ul class="nav navbar-nav ml-auto">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Expand me!
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" ng-href="#!/dept">Departments</a>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>

    <div class="container" style="min-height:440px;">
        @RenderBody()
    </div>
    <footer class="container">
        <div class="card border-light" style="background-color: #fbecec;">
            <div class="card-body">
                <div class="row">
                    <div class="col-6">
                        <p class="card-text">&copy;@DateTime.Now.Year, ABC Cor.
                    </div>
                    <div class="col-6 text-right">
                        <p class="card-text"><i class="fa fa-hand-peace-o" aria-hidden="true"> Md Rashedul Islam</i></p>
                    </div>
                </div>
            </div>
        </div>
    </footer>

    <div class="modal fade" tabindex="-1" role="dialog" id="delDeptModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header" style="background-color:#f6830f;">
                    <h5 class="modal-title">Confirm Delete!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="background-color:#d2d3c9;">
                    <div class="text-danger">This department and its all staffs will be deleted?</div>
                </div>
                <div class="modal-footer" style="background-color:#f7dad9;">
                    <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal"><i class="fa fa-window-close" aria-hidden="true"></i></button>
                    <button type="button" class="btn btn-danger btn-sm" ng-click="doDeleteDept()"><i class="fa fa-trash" aria-hidden="true"> Delete</i></button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" tabindex="-1" role="dialog" id="delPerModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header" style="background-color:#f6830f;">
                    <h5 class="modal-title">Confirm Delete!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="background-color:#d2d3c9;">
                    <div class="text-danger">This permanent staff will be deleted?</div>
                </div>
                <div class="modal-footer" style="background-color:#f7dad9;">
                    <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal"><i class="fa fa-window-close" aria-hidden="true"></i></button>
                    <button type="button" class="btn btn-danger btn-sm" ng-click="doDeletePer()"><i class="fa fa-trash" aria-hidden="true"> Delete</i></button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" tabindex="-1" role="dialog" id="delConModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header" style="background-color:#f6830f;">
                    <h5 class="modal-title">Confirm Delete!</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="background-color:#d2d3c9;">
                    <div class="text-danger">This contactual staff will be deleted?</div>
                </div>
                <div class="modal-footer" style="background-color:#f7dad9;">
                    <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal"><i class="fa fa-window-close" aria-hidden="true"></i></button>
                    <button type="button" class="btn btn-danger btn-sm" ng-click="doDeleteCon()"><i class="fa fa-trash" aria-hidden="true"> Delete</i></button>
                </div>
            </div>
        </div>
    </div>


    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/angular.js"></script>
    <script src="~/Scripts/angular-route.js"></script>
    <script src="~/Scripts/angular-messages.js"></script>
    <script src="~/Content/ui-bootstrap4/ui-bootstrap.js"></script>
    <script src="~/Content/ui-bootstrap4/ui-bootstrap-tpls.js"></script>

    @RenderSection("scripts", required: false)
    <script>
        angular.module("deptApp", ['ngRoute', 'ngMessages', 'ui.bootstrap'])
            .constant("apiUrl", "/api/")
            .constant("customUrl", "/custom/")
            .config(($routeProvider) => {
                $routeProvider
                    .when("/home", {
                        templateUrl: "/App/Views/home.html"
                    })
                    .when("/dept", {
                        templateUrl: "/App/Views/dept.html"
                    })
                    .when("/createDept", {
                        templateUrl: "/App/views/createDept.html"
                    })
                    .when("/editDept/:id", {
                        templateUrl: "/App/views/editDept.html"
                    })
                    .when("/createPerStaff", {
                        templateUrl: "/App/views/createPerStaff.html"
                    })
                    .when("/editPerStaff/:id", {
                        templateUrl: "/App/views/editPerStaff.html"
                    })
                    .when("/createConStaff", {
                        templateUrl: "/App/views/createConStaff.html"
                    })
                    .when("/editConStaff/:id", {
                        templateUrl: "/App/views/editConStaff.html"
                    })
                    .otherwise({ redirectTo: '/home' });

            })
            .controller("outerCtrl", ($scope, ApiService, apiUrl, customUrl) => {
                $scope.model = {};
                $scope.dataFetchError = "";
                //paging & filters

                //end
                ApiService.get(customUrl + "DeptList", null)
                    .then(r => {
                        $scope.model.depts = [];
                        //console.log(r.data);
                        angular.forEach(r.data, (v, k) => {
                            $scope.model.depts.push({ isExpanded: false, department: v });
                        });

                    }, err => {
                        $scope.dataFetchError = err.message || err.statusText || "Unspecified reason.";
                    });
                //expand
                $scope.expandChild = (index) => {

                    $scope.model.depts[index].isExpanded = !$scope.model.depts[index].isExpanded;
                }

                //events
                $scope.$on('deptInserted', (evt, data) => {
                    $scope.model.depts.push({ isExpanded: false, department: data });
                    //console.log($scope.model.depts);
                });
                $scope.$on('departmentUpdated', (evt, data) => {
                    console.log('updates');
                    //console.log(data.DepartmentId);

                    angular.forEach($scope.model.depts, function (v, k) {
                        if (v.department.DepartmentId == data.DepartmentId) {
                            angular.copy(data, v.department);

                        }
                    })

                });
                $scope.$on('perStaffInserted', (evt, data) => {

                    angular.forEach($scope.model.depts, function (v, k) {
                        if (v.department.DepartmentId == data.DepartmentId) {
                            v.department.permanentStaff.push(data);
                        }
                    })
                });
                $scope.$on('updatedPerStaff', (evt, data) => {
                    angular.forEach($scope.model.depts, function (v, k) {
                        if (v.department.DepartmentId == data.DepartmentId) {
                            angular.forEach(v.department.permanentStaff, function (v1, k1) {
                                if (v1.PermanentStaffId == data.PermanentStaffId) {
                                    angular.copy(data, v1);
                                    //console.log(v1);
                                }
                            });
                        }
                    })

                });
                $scope.$on('conStaffsInserted', (evt, data) => {

                    angular.forEach($scope.model.depts, function (v, k) {
                        if (v.department.DepartmentId == data.DepartmentId) {
                            v.department.contactualStaff.push(data);
                        }
                    })
                });
                $scope.$on('updatedConStaffs', (evt, data) => {
                    angular.forEach($scope.model.depts, function (v, k) {
                        if (v.department.DepartmentId == data.DepartmentId) {
                            angular.forEach(v.department.contactualStaff, function (v1, k1) {
                                if (v1.ContactualStaffId == data.ContactualStaffId) {
                                    angular.copy(data, v1);
                                    //console.log(v1);
                                }
                            });

                        }
                    })

                });
                //delete

                $scope.deptToDelete = null;

                $scope.perToDelete = null;
                $scope.deptSource = null;
                $scope.delIndex = null;

                $scope.conToDelete = null;
                $scope.deptSourceCon = null;
                $scope.condelIndex = null;

                $scope.deleteDept = (index) => {
                    $scope.deptToDelete = index;
                    $("#delDeptModal").modal('show');
                }
                $scope.doDeleteDept = () => {
                    var deptId = $scope.model.depts[$scope.deptToDelete].department.DepartmentId;
                    console.log(deptId);
                    ApiService.delete(apiUrl + "Departments/" + deptId, null)
                        .then(r => {
                            $scope.model.depts.splice($scope.deptToDelete, 1);
                            $("#delDeptModal").modal('hide');
                        }, err => {
                            console.log(err);
                        });
                }
                //delete perStaff
                $scope.deletePerStaff = (deptid, pid, index) => {


                    $scope.perToDelete = pid;
                    $scope.deptSource = deptid;
                    $scope.delIndex = index;
                    //console.log($scope.delIndex);
                    $("#delPerModal").modal('show');
                }
                $scope.doDeletePer = () => {
                    ApiService.delete(apiUrl + "PermanentStaffs/" + $scope.perToDelete, null)
                        .then(r => {
                            angular.forEach($scope.model.depts, (v, k) => {

                                if (v.department.DepartmentId == $scope.deptSource) {

                                    v.department.permanentStaff.splice($scope.delIndex, 1);
                                }
                            })
                            $scope.perToDelete = null;
                            $scope.deptSource = null;
                            $scope.delIndex = null;

                            $("#delPerModal").modal('hide');
                        }, err => { console.log(err) });
                }
                //delete conStaff
                $scope.deleteConStaff = (deptcid, cid, index) => {


                    $scope.conToDelete = cid;
                    $scope.deptSourceCon = deptcid;
                    $scope.condelIndex = index;
                    //console.log($scope.delIndex);
                    $("#delConModal").modal('show');
                }
                $scope.doDeleteCon = () => {
                    ApiService.delete(apiUrl + "ContactualStaffs/" + $scope.conToDelete, null)
                        .then(r => {
                            angular.forEach($scope.model.depts, (v, k) => {

                                if (v.department.DepartmentId == $scope.deptSourceCon) {

                                    v.department.contactualStaff.splice($scope.condelIndex, 1);
                                }
                            })
                            $scope.conToDelete = null;
                            $scope.deptSourceCon = null;
                            $scope.condelIndex = null;

                            $("#delConModal").modal('hide');
                        }, err => { console.log(err) });
                }
                //end

            });
    </script>
    <script src="~/App/Services/ApiService.js"></script>
    <script src="~/App/Filters/filter.js"></script>
    <script src="~/App/Controllers/createDeptCtrl.js"></script>
    <script src="~/App/Controllers/editDeptCtrl.js"></script>
    <script src="~/App/Controllers/perStaffCtrl.js"></script>
    <script src="~/App/Controllers/createPerStaffCtrl.js"></script>
    <script src="~/App/Controllers/createConStaffCtrl.js"></script>
    <script src="~/App/Controllers/conStaffCtrl.js"></script>
</body>
</html>
